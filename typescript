Script started on miÃ© 16 jul 2014 16:33:14 CEST
]0;root@vps82128: /home/expomar.comroot@vps82128:/home/expomar.com# service expomar.com star[Ktur[Ks
start: Unknown job: on
stop: Unknown job: on
/etc/init.d/expomar.com: 8: /etc/init.d/expomar.com: expect: not found
Script started, file is typescript
# exit
Script done, file is typescript
OLDPWD=/
TERM=xterm
PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
LANG=es_ES.UTF-8
PWD=/home/expomar.com
NODE_ENV=production
OLDPWD=/
TERM=xterm
PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
LANG=es_ES.UTF-8
PWD=/home/expomar.com
ADMIN_USER=lacon
OLDPWD=/
TERM=xterm
PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
LANG=es_ES.UTF-8
PWD=/home/expomar.com
ADMIN_PASS=pepedospalotes
OLDPWD=/
TERM=xterm
PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
LANG=es_ES.UTF-8
PWD=/home/expomar.com
PORT=61337
]0;root@vps82128: /home/expomar.comroot@vps82128:/home/expomar.com# service expomar.com status
start: Unknown job: on
stop: Unknown job: on
Script started, file is typescript
# exit
Script done, file is typescript
OLDPWD=/
TERM=xterm
PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
LANG=es_ES.UTF-8
PWD=/home/expomar.com
NODE_ENV=production
OLDPWD=/
TERM=xterm
PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
LANG=es_ES.UTF-8
PWD=/home/expomar.com
ADMIN_USER=lacon
OLDPWD=/
TERM=xterm
PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
LANG=es_ES.UTF-8
PWD=/home/expomar.com
ADMIN_PASS=pepedospalotes
OLDPWD=/
TERM=xterm
PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
LANG=es_ES.UTF-8
PWD=/home/expomar.com
PORT=61337
]0;root@vps82128: /home/expomar.comroot@vps82128:/home/expomar.com# service expomar.com statusexit[Kpasswdls -la[K /home/[K[K /home/[K -lapasswd[2Pexitservice expomar.com status[K/etc/init.d/expomar.com sr[Ktart
bash: /etc/init.d/expomar.com: upstart: bad interpreter: No such file or directory
]0;root@vps82128: /home/expomar.comroot@vps82128:/home/expomar.com# /etc/init.d/expomar.com start[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[Kl/etc/inits/etc/init /etc/init
bootmisc.sh.conf             mounted-proc.conf                 rc-sysinit.conf
checkfs.sh.conf              mounted-run.conf                  rpcbind-boot.conf
checkroot-bootclean.sh.conf  mounted-tmp.conf                  rpcbind-boot.override
checkroot.sh.conf            mounted-var.conf                  rpcbind.conf
console.conf                 mountkernfs.sh.conf               samba-ad-dc.override
console-font.conf            mountnfs-bootclean.sh.conf        setvtrgb.conf
console-setup.conf           mountnfs.sh.conf                  shutdown.conf
container-detect.conf        mtab.sh.conf                      smbd.override
control-alt-delete.conf      networking.conf                   ssh.conf
cron.conf                    network-interface.conf            startpar-bridge.conf
failsafe.conf                network-interface-container.conf  tty1.conf
flush-early-job-log.conf     network-interface-security.conf   tty2.conf
hostname.conf                nmbd.override                     tty3.conf
hwclock.conf                 passwd.conf                       tty4.conf
hwclock-save.conf            plymouth.conf                     tty5.conf
kmod.conf                    plymouth-log.conf                 tty6.conf
mountall-bootclean.sh.conf   plymouth-ready.conf               udev-fallback-graphics.conf
mountall.conf                plymouth-shutdown.conf            udev-finish.conf
mountall-net.conf            plymouth-splash.conf              udevmonitor.conf
mountall-reboot.conf         plymouth-stop.conf                udevtrigger.conf
mountall.sh.conf             plymouth-upstart-bridge.conf      upstart-file-bridge.conf
mountall-shell.conf          portmap-wait.conf                 upstart-socket-bridge.conf
mountdevsubfs.sh.conf        procps.conf                       upstart-udev-bridge.conf
mounted-debugfs.conf         rc.conf                           wait-for-state.conf
mounted-dev.conf             rcS.conf                          xinetd.conf
]0;root@vps82128: /home/expomar.comroot@vps82128:/home/expomar.com# ls /etc/init s[K[K/ske[K[K
samba-ad-dc.override  shutdown.conf         ssh.conf              
setvtrgb.conf         smbd.override         startpar-bridge.conf  
]0;root@vps82128: /home/expomar.comroot@vps82128:/home/expomar.com# ls /etc/init/s
samba-ad-dc.override  shutdown.conf         ssh.conf              
setvtrgb.conf         smbd.override         startpar-bridge.conf  
]0;root@vps82128: /home/expomar.comroot@vps82128:/home/expomar.com# ls /etc/init/s[K[K[K[K[K[K[K[K[K[K[K[K[K[Kcat /etc/ini.[Kt.d/
bind9                 modules_dep.sh        reboot                umountfs
console-setup         networking            rpcbind               umountnfs.sh
cron                  nginx                 rsync                 umountroot
expomar.com           ondemand              screen-cleanup        unattended-upgrades
.expomar.com.swp      procps                sendsigs              urandom
fetchmail             quota                 single                vzreboot
halt                  quotarpc              skeleton              wide-dhcpv6-client
keymap.sh             rc                    ssh                   xinetd
killprocs             rc.local              sudo                  
kmod                  rcS                   syslog-ng             
.legacy-bootordering  README                udev                  
]0;root@vps82128: /home/expomar.comroot@vps82128:/home/expomar.com# cat /etc/init.d/nginx ng[K[K[K
#!/bin/sh

### BEGIN INIT INFO
# Provides:	  nginx
# Required-Start:    $local_fs $remote_fs $network $syslog $named
# Required-Stop:     $local_fs $remote_fs $network $syslog $named
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: starts the nginx web server
# Description:       starts nginx using start-stop-daemon
### END INIT INFO

PATH=/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin
DAEMON=/usr/sbin/nginx
NAME=nginx
DESC=nginx

# Include nginx defaults if available
if [ -r /etc/default/nginx ]; then
	. /etc/default/nginx
fi

test -x $DAEMON || exit 0

. /lib/init/vars.sh
. /lib/lsb/init-functions

PID=$(awk -F'[ \t;]+' '/[^#]pid/ {print $2}' /etc/nginx/nginx.conf)
if [ -z "$PID" ]
then
	PID=/run/nginx.pid
fi

# Check if the ULIMIT is set in /etc/default/nginx
if [ -n "$ULIMIT" ]; then
	# Set the ulimits
	ulimit $ULIMIT
fi

#
# Function that starts the daemon/service
#
do_start()
{
	# Return
	#   0 if daemon has been started
	#   1 if daemon was already running
	#   2 if daemon could not be started
	start-stop-daemon --start --quiet --pidfile $PID --exec $DAEMON --test > /dev/null \
		|| return 1
	start-stop-daemon --start --quiet --pidfile $PID --exec $DAEMON -- \
		$DAEMON_OPTS 2>/dev/null \
		|| return 2
}

test_nginx_config() {
	$DAEMON -t $DAEMON_OPTS >/dev/null 2>&1
}

#
# Function that stops the daemon/service
#
do_stop()
{
	# Return
	#   0 if daemon has been stopped
	#   1 if daemon was already stopped
	#   2 if daemon could not be stopped
	#   other if a failure occurred
	start-stop-daemon --stop --quiet --retry=TERM/30/KILL/5 --pidfile $PID --name $NAME
	RETVAL="$?"

	sleep 1
	return "$RETVAL"
}

#
# Function that sends a SIGHUP to the daemon/service
#
do_reload() {
	start-stop-daemon --stop --signal HUP --quiet --pidfile $PID --name $NAME
	return 0
}

#
# Rotate log files
#
do_rotate() {
	start-stop-daemon --stop --signal USR1 --quiet --pidfile $PID --name $NAME
	return 0
}

#
# Online upgrade nginx executable
#
# "Upgrading Executable on the Fly"
# http://nginx.org/en/docs/control.html
#
do_upgrade() {
	# Return
	#   0 if nginx has been successfully upgraded
	#   1 if nginx is not running
	#   2 if the pid files were not created on time
	#   3 if the old master could not be killed
	if start-stop-daemon --stop --signal USR2 --quiet --pidfile $PID --name $NAME; then
		# Wait for both old and new master to write their pid file
		while [ ! -s "${PID}.oldbin" ] || [ ! -s "${PID}" ]; do
			cnt=`expr $cnt + 1`
			if [ $cnt -gt 10 ]; then
				return 2
			fi
			sleep 1
		done
		# Everything is ready, gracefully stop the old master
		if start-stop-daemon --stop --signal QUIT --quiet --pidfile "${PID}.oldbin" --name $NAME; then
			return 0
		else
			return 3
		fi
	else
		return 1
	fi
}

case "$1" in
	start)
		[ "$VERBOSE" != no ] && log_daemon_msg "Starting $DESC" "$NAME"
		do_start
		case "$?" in
			0|1) [ "$VERBOSE" != no ] && log_end_msg 0 ;;
			2) [ "$VERBOSE" != no ] && log_end_msg 1 ;;
		esac
		;;
	stop)
		[ "$VERBOSE" != no ] && log_daemon_msg "Stopping $DESC" "$NAME"
		do_stop
		case "$?" in
			0|1) [ "$VERBOSE" != no ] && log_end_msg 0 ;;
			2) [ "$VERBOSE" != no ] && log_end_msg 1 ;;
		esac
		;;
	restart)
		log_daemon_msg "Restarting $DESC" "$NAME"

		# Check configuration before stopping nginx
		if ! test_nginx_config; then
			log_end_msg 1 # Configuration error
			exit 0
		fi

		do_stop
		case "$?" in
			0|1)
				do_start
				case "$?" in
					0) log_end_msg 0 ;;
					1) log_end_msg 1 ;; # Old process is still running
					*) log_end_msg 1 ;; # Failed to start
				esac
				;;
			*)
				# Failed to stop
				log_end_msg 1
				;;
		esac
		;;
	reload|force-reload)
		log_daemon_msg "Reloading $DESC configuration" "$NAME"

		# Check configuration before reload nginx
		#
		# This is not entirely correct since the on-disk nginx binary
		# may differ from the in-memory one, but that's not common.
		# We prefer to check the configuration and return an error
		# to the administrator.
		if ! test_nginx_config; then
			log_end_msg 1 # Configuration error
			exit 0
		fi

		do_reload
		log_end_msg $?
		;;
	configtest|testconfig)
		log_daemon_msg "Testing $DESC configuration"
		test_nginx_config
		log_end_msg $?
		;;
	status)
		status_of_proc -p $PID "$DAEMON" "$NAME" && exit 0 || exit $?
		;;
	upgrade)
		log_daemon_msg "Upgrading binary" "$NAME"
		do_upgrade
		log_end_msg 0
		;;
	rotate)
		log_daemon_msg "Re-opening $DESC log files" "$NAME"
		do_rotate
		log_end_msg $?
		;;
	*)
		echo "Usage: $NAME {start|stop|restart|reload|force-reload|status|configtest|rotate|upgrade}" >&2
		exit 3
		;;
esac

:
]0;root@vps82128: /home/expomar.comroot@vps82128:/home/expomar.com# cp ngin[K[K[K[K/etc/init.d/skeleton /etc/expomar.[K[K[K[K[K[K[K[Kinit.d/expomar.com
]0;root@vps82128: /home/expomar.comroot@vps82128:/home/expomar.com# vim [K[K[K[Kvim /etc/init/expomar.com.conf 
[?1049h[?1h=[2;1Hâ½[6n[1;1H  [1;1H[1;27r[?12;25h[?12l[?25h[27m[m[H[2J[?25l[27;1H"/etc/init/expomar.com.conf" 22L, 431C[>c[1;1H[33mdescription[m [31m"daemon for expomar.com http server"[m

[33mstart[m [33mon[m [35mfilesystem[m [32mand[m [35mstarted[m networking
[33mstop[m [33mon[m shutdown

[33mexpect[m [32mfork[m

[33mchdir[m /home/expomar.com

[33menv[m NODE_ENV=production
[33menv[m PORT=27880

[33mscript
[m  [33mexec[m [31m2[m[33m>>[m forever.log [31m1[m[33m>>[m forever.log
  [33mexec[m forever [33mstart[m [35m-a[m [35m-l[m forever.log [35m-o[m out.log [35m-e[m err.log backend/server.js
[33mend script[m

[32mpre-stop[m [33mscript
[m  [33mexec[m [31m2[m[33m>>[m forever.log [31m1[m[33m>>[m forever.log
  [33mexec[m forever [33mstop[m backend/server.js
[33mend script[m

[1m[34m~                                                                                                     [24;1H~                                                                                                     [25;1H~                                                                                                     [26;1H~                                                                                                     [m[27;85H1,1[10CTodo[1;1H[?12l[?25hP+q436f\P+q6b75\P+q6b64\P+q6b72\P+q6b6c\P+q2332\P+q2334\P+q2569\P+q2a37\P+q6b31\[?25l[27;85H2,0-1[2;1H[?12l[?25h[?25l[27;85H3,1  [3;1H[?12l[?25h[?25l[27;85H4[4;1H[?12l[?25h[?25l[27;85H5,0-1[5;1H[?12l[?25h[?25l[27;85H6,1  [6;1H[?12l[?25h[?25l[27;85H7,0-1[7;1H[?12l[?25h[?25l[27;85H8,1  [8;1H[?12l[?25h[?25l[27;85H9,0-1[9;1H[?12l[?25h[?25l[27;85H10,1 [10;1H[?12l[?25h[?25l[27;86H1[11;1H[?12l[?25h[?25l[27;86H2,0-1[12;1H[?12l[?25h[?25l[27;86H1,1  [11;1H[?12l[?25h[?25l[27;86H0[10;1H[?12l[?25h[?25l[27;86H1[11;1H[?12l[?25h[?25l[12;26r[12;1H[L[1;27r[12;1H[33menv[m PORT=27880[27;1H[K[27;85H12,1[9CTodo[12;1H[?12l[?25h[?25l[27;89H4[12;14H[?12l[?25h[?25l[27;89H3[12;13H[?12l[?25h[?25l[27;89H2[12;12H[?12l[?25h[?25l[27;89H1[12;11H[?12l[?25h[?25l[27;89H0[12;10H[?12l[?25h[?25l[27;88H9 [12;9H[?12l[?25h[?25l[27;1H[1m-- INSERTAR --[m[27;85H[K[27;85H12,9[9CTodo[12;9H[?12l[?25h[?25l=27880[12;14H[K[27;88H8[12;8H[?12l[?25h[?25l=27880[12;13H[K[27;88H7[12;7H[?12l[?25h[?25l=27880[12;12H[K[27;88H6[12;6H[?12l[?25h[?25l=27880[12;11H[K[27;88H5[12;5H[?12l[?25h[?25lA=27880[27;88H6[12;6H[?12l[?25h[?25lD=27880[27;88H7[12;7H[?12l[?25h[?25lM=27880[27;88H8[12;8H[?12l[?25h[?25lI=27880[27;88H9[12;9H[?12l[?25h[?25lN=27880[27;88H10[12;10H[?12l[?25h[?25l_=27880[27;89H1[12;11H[?12l[?25h[?25lU=27880[27;89H2[12;12H[?12l[?25h[?25lI=27880[27;89H3[12;13H[?12l[?25h[?25l=27880[12;18H[K[27;89H2[12;12H[?12l[?25h[?25lS=27880[27;89H3[12;13H[?12l[?25h[?25lE=27880[27;89H4[12;14H[?12l[?25h[?25lR=27880[27;89H5[12;15H[?12l[?25h[?25l[27;88H21[12;21H[?12l[?25h[27;1H[K[12;20H[?25l[27;85H12,20[8CTodo[12;20H[?12l[?25h[?25l[27;1H[1m-- INSERTAR --[m[27;85H[K[27;85H12,20[8CTodo[12;20H[?12l[?25h[?25l[27;89H1[12;21H[?12l[?25h[?25l[12;20H[K[27;89H0[12;20H[?12l[?25h[?25l[12;19H[K[27;88H19[12;19H[?12l[?25h[?25l[12;18H[K[27;89H8[12;18H[?12l[?25h[?25l[12;17H[K[27;89H7[12;17H[?12l[?25h[?25l[12;16H[K[27;89H6[12;16H[?12l[?25h[?25ll[27;89H7[12;17H[?12l[?25h[?25la[27;89H8[12;18H[?12l[?25h[?25lco[27;88H20[12;20H[?12l[?25h[?25ln[27;89H1[12;21H[?12l[?25h[?25l[13;26r[13;1H[L[1;27r[27;85H[K[27;85H13,1[9CTodo[13;1H[?12l[?25h[?25le[27;88H2[13;2H[?12l[?25h[?25ln[27;88H3[13;3H[?12l[?25h[?25l[33menv[m[27;88H4[13;4H[?12l[?25h[?25l[27;88H5[13;5H[?12l[?25h[?25lA[27;88H6[13;6H[?12l[?25h[?25lD[27;88H7[13;7H[?12l[?25h[?25lM[27;88H8[13;8H[?12l[?25h[?25lI[27;88H9[13;9H[?12l[?25h[?25lN[27;88H10[13;10H[?12l[?25h[?25l_[27;89H1[13;11H[?12l[?25h[?25lP[27;89H2[13;12H[?12l[?25h[?25lA[27;89H3[13;13H[?12l[?25h[?25lS[27;89H4[13;14H[?12l[?25h[?25lS[27;89H5[13;15H[?12l[?25h[?25l=[27;89H6[13;16H[?12l[?25h[?25lpe[27;89H8[13;18H[?12l[?25h[?25lp[27;89H9[13;19H[?12l[?25h[?25le[27;88H20[13;20H[?12l[?25h[?25ld[27;89H1[13;21H[?12l[?25h[?25lo[27;89H2[13;22H[?12l[?25h[?25ls[27;89H3[13;23H[?12l[?25h[?25lp[27;89H4[13;24H[?12l[?25h[?25la[27;89H5[13;25H[?12l[?25h[?25ll[27;89H6[13;26H[?12l[?25h[?25lo[27;89H7[13;27H[?12l[?25h[?25lt[27;89H8[13;28H[?12l[?25h[?25les[27;88H30[13;30H[?12l[?25h[27;1H[K[13;29H[?25l[27;85H13,29[8CTodo[13;29H[?12l[?25h[?25l[27;85H[K[27;1H:[?12l[?25hw[?25l[?12l[?25hq[?25l[?12l[?25h[?25l[27;3H[K[27;3H[?12l[?25h[?25l"/etc/init/expomar.com.conf" 24L, 482C escritos[37C13,29[8CTodo[27;85H[K[27;85H13,29[8CTodo[13;29H[?12l[?25h[?25l[27;86H4,0-1[14;1H[?12l[?25h[?25l[27;86H5,6  [15;6H[?12l[?25h[?25l[27;86H6,29[16;29H[?12l[?25h[?25l[27;86H7[17;29H[?12l[?25h[?25l